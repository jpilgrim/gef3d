## BEGIN PROJECT BUILD PROPERTIES ##

# default is N, can set a different buildType if needed. This is simply a label that implies a statement of quality.
buildType=N

writableBuildRoot=${WORKSPACE}/build
osgi.ws=cocoa

JAVA14_HOME=${JAVA_HOME}
JAVA50_HOME=${JAVA_HOME}
JAVA60_HOME=${JAVA_HOME}
#JAVA_HOME=/System/Library/Frameworks/JavaVM.framework/Home
#JAVA50_HOME=/System/Library/Frameworks/JavaVM.framework/Home

#WORKSPACE=/Users/jpilgrim/athenabuild

JAVA_ARGS="-Dhttp.proxyHost=proxy.eclipse.org -Dhttp.proxyPort=port -Dhttps.proxyHost=proxy.eclipse.org -Dhttps.proxyPort=port -Dhttp.nonProxyHosts=*.eclipse.org -Dhttps.nonProxyHosts=*.eclipse.org -Dftp.proxyHost=proxy.eclipse.org -Dftp.proxyPort=port"
JVM_OPTS="-Dhttp.proxyHost=proxy.eclipse.org -Dhttp.proxyPort=port -Dhttps.proxyHost=proxy.eclipse.org -Dhttps.proxyPort=port -DhttpnonProxyHosts=*.eclipse.org -DhttpsnonProxyHosts=*.eclipse.org -Dftp.proxyHost=proxy.eclipse.org -Dftp.proxyPort=port"
ANT_ARGS="-Dhttp.proxyHost=proxy.eclipse.org -Dhttp.proxyPort=port -Dhttps.proxyHost=proxy.eclipse.org -Dhttps.proxyPort=port -DhttpnonProxyHosts=*.eclipse.org -DhttpsnonProxyHosts=*.eclipse.org -Dftp.proxyHost=proxy.eclipse.org -Dftp.proxyPort=port"
ANT_OPTS="-Dhttp.proxyHost=proxy.eclipse.org -Dhttp.proxyPort=port -Dhttps.proxyHost=proxy.eclipse.org -Dhttps.proxyPort=port -DhttpnonProxyHosts=*.eclipse.org -DhttpsnonProxyHosts=*.eclipse.org -Dftp.proxyHost=proxy.eclipse.org -Dftp.proxyPort=port"

downloadMirror=http://download.eclipse.org
# 3.5:
eclipse-platform=http://archive.eclipse.org/eclipse/downloads/drops/R-3.5.2-201002111343/eclipse-SDK-3.5.2-linux-gtk.tar.gz
eclipse-platform=file:/Users/jpilgrim/Downloads/_filing/Eclipse/3.5/3.5.2/eclipse-SDK-3.5.2-macosx-cocoa.tar.gz
# 3.6:
#os-file=eclipse-SDK-3.6-linux-gtk-ppc.tar.gz
#eclipse-platform=${downloadMirror}/eclipse/downloads/drops/R-3.6-201006080911/${os-file}
staticDependencies=${eclipse-platform}

hudsonJobsPath=https://build.eclipse.org/hudson/job

							dependencyURLs=							${staticDependencies},\
http://download.eclipse.org/tools/gef/downloads/drops/3.5.2/R201002241200/GEF-runtime-3.5.2.zip,\
	http://download.eclipse.org/modeling/emf/emf/downloads/drops/2.5.0/R200906151043/emf-runtime-2.5.0.zip,\
http://archive.eclipse.org/modeling/gmf/gmf/downloads/drops/2.2.2/R201002241200/gmf-runtime-2.2.2.zip
	
	# local mirror:
	#localMirror=	file:/Users/jpilgrim/workspaces/mirror
	#dependencyURLs=${localMirror}/eclipse-SDK-3.5.2-macosx-cocoa.tar.gz,\
	#${localMirror}/emf-runtime-2.5.0.zip,\
	#${localMirror}/GEF-runtime-3.5.2.zip,\
#${localMirror}/gmf-runtime-2.2.2.zip
	
	
	# can be SDK, runtime, or update zips.
#dependencyURLs=http://download.eclipse.org/eclipse/downloads/drops/R-3.5-200906111540/eclipse-SDK-3.5-linux-gtk-ppc.tar.gz,\
#http://download.eclipse.org/tools/cdt/builds/6.0.0/I.I200902031437/cdt-master-6.0.0-I200902031437.zip

	
	repositoryURLs=	http://lwjgl.org/update
	
	#repositoryURLs=http://download.eclipse.org/releases/galileo,\
	#http://download.eclipse.org/modeling/emf/updates/releases,\
	#http://download.eclipse.org/modeling/gmf/updates/releases,\
	#http://lwjgl.org/update

		
#repositoryURLs=\
# http://download.eclipse.org/athena/repos/eclipse-Update-3.5.2-201002111343.zip

pluginIDsToInstall=
featureIDsToInstall=
#featureIDsToInstall=org.eclipse.emf+org.eclipse.gef

#what steps should we do? optional steps include:
# dir2cvsmap,dir2svnmap,map2psf,buildZips,buildExtra
# see common.releng/buildAll.xml for how to use these steps
# if not set, default is build.steps=buildUpdate,buildTests,generateDigests,test,publish,cleanup
# on windows or mac, use testLocal; on linux use test or testLocal (requires Xvnc or Xvfb)
build.steps=buildUpdate,buildTests,generateDigests,test,publish,cleanup

	
	# To permit automatic downloads of non-EPL compatible code, set this to property to "I accept"
thirdPartyDownloadLicenseAcceptance="I accept"
	
# MUST BE SET #
projectid=technology.gef3d
zipPrefix=GEF3D
# if project is incubating, insert "-incubation" into generated zip file names; otherwise omit
incubation=-incubation
version=0.9.3
mainFeatureToBuildID=org.eclipse.gef3d.feature.sdk
testFeatureToBuildID=org.eclipse.gef3d.feature.test
runPackager=true
individualSourceBundles=true
flattenDependencies=true
parallelCompilation=true
generateFeatureVersionSuffix=true
allowBinaryCycles = false
javacSource=1.5
javacTarget=1.5
compilerArg=-enableJavadoc -encoding UTF-8

# default is N, can set a different buildType if needed. This is simply a label that implies a statement of quality.
buildType=N

# don't suppress cleanup if tests fail
#noclean=false

# AMP:
#eclipse.downloads=file:/home/data/httpd/download.eclipse.org
#bm.headless.path=tools/buckminster/headless-3.6
#director.path=tools/buckminster/products/director_latest.zip
#amp.download.area=/home/data/httpd/download.eclipse.org/amp/
#eclipse.staging.area=${env.HUDSON_HOME}/jobs/${env.JOB_NAME}/signing



# use this to omit pack200 step. You may also want to skip packing specific bundles with an eclipse.inf file. See http://wiki.eclipse.org/JarProcessor_Options
#skipPack=true
# use this to omit jar signing
#skipSign=true
# list of feature.groups & plugins to install into target against which we will then build

#IUsToInstall=\
# org.eclipse.sdk.feature.group+org.eclipse.sdk.ide
#IUsToInstall=org.eclipse.sdk.feature.group+org.eclipse.sdk.ide+\
#org.eclipse.xsd.feature.group+org.eclipse.gef.feature.group





## END PROJECT BUILD PROPERTIES ##
